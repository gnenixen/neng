/*
    THIS FILE IS AUTOGENERATED,
    DO NOT EDIT IT,
    FOR REFS SEE modules/SCsub
*/
module engine.modules.register;

private {
    import engine.core.object;
    import engine.modules;
}

private template TRegiterStaticModule_Check( string name ) {
    import std.string;

    enum TRegiterStaticModule_Check = format(
        "
        import engine.modules.%1$s;

        static if (
            !__traits( compiles, mixin( \"{ import engine.modules.%1$s; import engine.core.object; newObject!CMD_%1$s(); }\" ) )
        ) {
            pragma( msg, \"Module ( %1$s ) invalid registration, please create CMD_%1$s in modules/%1$s/package.d\" );
        } else
        ",
        name
    );
}

private template TRegiterStaticModule( string name ) {
    import std.string : format;

    enum TRegiterStaticModule = TRegiterStaticModule_Check!name ~ format(
        "
            {
                GModules.regModule( NewObject!CMD_%1$s() );
            }
        ",
        name
    );
}
void modules_registerStatic() {
	mixin( TRegiterStaticModule!"neng_sub_math" );
	mixin( TRegiterStaticModule!"physics_2d" );
	mixin( TRegiterStaticModule!"sound" );
	mixin( TRegiterStaticModule!"render_device" );
	mixin( TRegiterStaticModule!"display_server" );
}
